import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a,b as s,o}from"./app-Di6OdOcP.js";const r={},n=s('<h1 id="kubernetes" tabindex="-1"><a class="header-anchor" href="#kubernetes"><span>Kubernetes</span></a></h1><h2 id="一、k8s-核心概念" tabindex="-1"><a class="header-anchor" href="#一、k8s-核心概念"><span>一、k8s 核心概念</span></a></h2><h3 id="_1、-容器" tabindex="-1"><a class="header-anchor" href="#_1、-容器"><span>1、 容器</span></a></h3><p>​ 容器是一种轻量级、可移植的虚拟化技术，用于打包和运行应用程序。容器可以共享主机操作系统的内核，从而提高部署效率和资源利用率。常见的容器技术包括 Docker、Kubernetes Pod、LXC 等。</p><h3 id="_2、-namespace" tabindex="-1"><a class="header-anchor" href="#_2、-namespace"><span>2、 Namespace</span></a></h3><p>Namespace 是 k8s 中的资源隔离单元，用于对 k8s 对象进行命名空间隔离。通过创建 Namespace，可以对同一集群中的不同应用程序进行资源隔离、权限控制和配置管理。</p><h3 id="_3、-rootfs" tabindex="-1"><a class="header-anchor" href="#_3、-rootfs"><span>3、 rootfs</span></a></h3><p>rootfs 是 k8s 中的容器根文件系统，用于存储容器的文件系统和应用程序。rootfs 是读写可变的，可以实现容器的持久化存储和数据共享。</p>',8);function c(p,i){return o(),t("div",null,[n,a(" more ")])}const m=e(r,[["render",c],["__file","k8s.html.vue"]]),d=JSON.parse('{"path":"/posts/%E5%B7%A5%E5%85%B7/k8s.html","title":"Kubernetes","lang":"zh-CN","frontmatter":{"title":"Kubernetes","date":"2024-06-30T16:24:22.000Z","tags":"code","category":"工具","description":"一、k8s 核心概念 1、 容器 ​ 容器是一种轻量级、可移植的虚拟化技术，用于打包和运行应用程序。容器可以共享主机操作系统的内核，从而提高部署效率和资源利用率。常见的容器技术包括 Docker、Kubernetes Pod、LXC 等。 2、 Namespace Namespace 是 k8s 中的资源隔离单元，用于对 k8s 对象进行命名空间隔离。...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%B7%A5%E5%85%B7/k8s.html"}],["meta",{"property":"og:site_name","content":"Lance"}],["meta",{"property":"og:title","content":"Kubernetes"}],["meta",{"property":"og:description","content":"一、k8s 核心概念 1、 容器 ​ 容器是一种轻量级、可移植的虚拟化技术，用于打包和运行应用程序。容器可以共享主机操作系统的内核，从而提高部署效率和资源利用率。常见的容器技术包括 Docker、Kubernetes Pod、LXC 等。 2、 Namespace Namespace 是 k8s 中的资源隔离单元，用于对 k8s 对象进行命名空间隔离。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-09T11:07:04.000Z"}],["meta",{"property":"article:author","content":"RuyiWei"}],["meta",{"property":"article:published_time","content":"2024-06-30T16:24:22.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-09T11:07:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Kubernetes\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-06-30T16:24:22.000Z\\",\\"dateModified\\":\\"2024-08-09T11:07:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"RuyiWei\\"}]}"]]},"headers":[{"level":2,"title":"一、k8s 核心概念","slug":"一、k8s-核心概念","link":"#一、k8s-核心概念","children":[{"level":3,"title":"1、 容器","slug":"_1、-容器","link":"#_1、-容器","children":[]},{"level":3,"title":"2、 Namespace","slug":"_2、-namespace","link":"#_2、-namespace","children":[]},{"level":3,"title":"3、 rootfs","slug":"_3、-rootfs","link":"#_3、-rootfs","children":[]}]}],"git":{"createdTime":1723201624000,"updatedTime":1723201624000,"contributors":[{"name":"yqiChen","email":"chenyuqi1229@gmail.com","commits":1}]},"readingTime":{"minutes":0.71,"words":212},"filePathRelative":"posts/工具/k8s.md","localizedDate":"2024年6月30日","excerpt":"\\n<h2>一、k8s 核心概念</h2>\\n<h3>1、 容器</h3>\\n<p>​\\t容器是一种轻量级、可移植的虚拟化技术，用于打包和运行应用程序。容器可以共享主机操作系统的内核，从而提高部署效率和资源利用率。常见的容器技术包括 Docker、Kubernetes Pod、LXC 等。</p>\\n<h3>2、 Namespace</h3>\\n<p>Namespace 是 k8s 中的资源隔离单元，用于对 k8s 对象进行命名空间隔离。通过创建 Namespace，可以对同一集群中的不同应用程序进行资源隔离、权限控制和配置管理。</p>\\n<h3>3、 rootfs</h3>\\n<p>rootfs 是 k8s 中的容器根文件系统，用于存储容器的文件系统和应用程序。rootfs 是读写可变的，可以实现容器的持久化存储和数据共享。</p>\\n","autoDesc":true}');export{m as comp,d as data};
