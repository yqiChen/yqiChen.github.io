import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,a as t,b as a,o as n}from"./app-jl_0F-Zm.js";const s="/image/es/es14.png",l="/image/es/es15.png",c="/image/es/es16.png",r="/image/es/es17.png",o="/image/es/es18.png",p="/image/es/es19.png",d={},h=a('<h1 id="es与mysql数据同步" tabindex="-1"><a class="header-anchor" href="#es与mysql数据同步"><span>ES与MySQL数据同步</span></a></h1><p>在实际项目开发中，常用Mysql作为业务数据库，ElasticSearch作为查询库。ElasticSearch主要用来应对海量数据的复杂查询，提高查询效率和缓解Mysql数据库的压力。如何实现 MySQL 数据库和ElasticSearch之间的数据同步也是为非常关键的，下面介绍几种常见的数据同步方案方案。</p><h2 id="一、同步双写方案" tabindex="-1"><a class="header-anchor" href="#一、同步双写方案"><span>一、同步双写方案</span></a></h2><figure><img src="'+s+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>同步双写是指在Mysql上进行数据增删改操作时，同步将数据写入到ElasticSearch中，使用此方式保证Mysql与ElasticSearch中的数据一致性的优/缺点如下：</p><div class="hint-container tip"><p class="hint-container-title">优点 :</p><ul><li>实现简单；</li><li>实时性高</li></ul></div><div class="hint-container warning"><p class="hint-container-title">缺点:</p><ul><li>1、存在数据丢失风险；</li><li>2、性能不高；</li><li>3、和业务之间的耦合性强；</li><li>4、不方便做扩展</li></ul></div><h2 id="二、异步双写方案" tabindex="-1"><a class="header-anchor" href="#二、异步双写方案"><span>二、异步双写方案</span></a></h2><figure><img src="'+l+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在Mysql上进行数据增删改操作时，通过MQ（如Kafka）异步将数据写入到ElasticSearch中。这种异步方式可以降低Mysql的写入延迟并有效的防止了ElasticSearch自身问题而影响到Mysql数据的写入，但是可能会出现存在Mysql和ElasticSearch数据长时间的不一致的现象。此方案的优缺点如下：</p><div class="hint-container tip"><p class="hint-container-title">优点：</p><p>性能高；数据不易丢失；支持多数据源写入</p></div><div class="hint-container warning"><p class="hint-container-title">缺点</p><p>1、增加了系统的复杂度，因为需要接入MQ；</p><p>2、数据之间的同步可能延迟高，MQ消费可能不及时；</p><p>3、发送消息需要硬编码到业务中；</p></div><h2 id="三、定时任务同步方案" tabindex="-1"><a class="header-anchor" href="#三、定时任务同步方案"><span>三、定时任务同步方案</span></a></h2><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>定时任务的方案就是设定一个频率去Mysql中拉取数据来同步到ElasticSearch中，但是这个频率如何选择要根据自身的业务特性来选取。当前，如果频率设置很高就给系统造成一定的压力（如CPU、内存使用率居高不下），频率设置很低数据的实时性比较差。此方案的优缺点如下</p><div class="hint-container tip"><p class="hint-container-title">优点：</p><p>实现简单；无额外的代码的侵入业务中</p></div><div class="hint-container warning"><p class="hint-container-title">缺点</p><p>1、实时性差，因为依赖定时任务的执行频率；</p><p>2、给数据库带来一定的压力，因为是不断的轮询数据库；</p></div><h2 id="四、使用logstash同步" tabindex="-1"><a class="header-anchor" href="#四、使用logstash同步"><span>四、使用Logstash同步</span></a></h2><figure><img src="'+r+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此方案是针对定时任务同步的方案的一种改进，原理是Logstash提供了JDBC插件，它可以定期使用SQL查询数据库并且获取数据变化，然后通过配置来实现Mysql数据同步到ElasticSearch中。Logstash的配置:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>
input {
  jdbc {
    jdbc_driver_library =&gt; &quot;/path/to/mysql-connector-java-x.x.x-bin.jar&quot;
    jdbc_driver_class =&gt; &quot;com.mysql.jdbc.Driver&quot;
    jdbc_connection_string =&gt; &quot;jdbc:mysql://192.168.202.12:3306/order&quot;
    jdbc_user =&gt; &quot;root&quot;
    jdbc_password =&gt; &quot;root123456&quot;
    schedule =&gt; &quot;* * * * *&quot;
    statement =&gt; &quot;SELECT * FROM order&quot;
  }
}
 
filter {
  # 在此处添加任何特定的数据过滤器
  
}
 
output {
  elasticsearch {
    hosts =&gt; [&quot;192.168.203.21:9200&quot;]
    index =&gt; &quot;order&quot;
    document_id =&gt; &quot;%{unique_id_field}&quot;
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">优点：</p><p>实现简单；无额外的代码的侵入业务中</p></div><div class="hint-container warning"><p class="hint-container-title">缺点</p><p>1、实时性差，因为Logstash是定期同步数据的；</p><p>2、需要中间件的支持；</p></div><h2 id="五、使用binlog同步——自建binlog服务中心" tabindex="-1"><a class="header-anchor" href="#五、使用binlog同步——自建binlog服务中心"><span>五、使用binlog同步——自建binlog服务中心</span></a></h2><figure><img src="`+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>此方案是先读取Mysql的binlog日志，然后将binlog日志交给binlog中心服务处理，然后把读取的binlog转化成MQ消息，通过消费MQ消息将Mysql中的数据同步到ElasticSearch中。此方案的优缺点如下：</p><div class="hint-container tip"><p class="hint-container-title">优点：</p><p>性能高；业务解耦；无额外的代码的侵入业务中</p></div><div class="hint-container warning"><p class="hint-container-title">缺点</p><p>1、构建binlog中心服务复杂；</p><p>2、采用MQ消费binlog也会存在延迟风险；</p></div><h2 id="六、使用binlog同步——开源中间件" tabindex="-1"><a class="header-anchor" href="#六、使用binlog同步——开源中间件"><span>六、使用binlog同步——开源中间件</span></a></h2><p>基于binlog同步的方式，目前有许多的优秀数据迁移工具可以实现，如canal，其实现的原理是binlog订阅的方式，模拟一个Mysql的Slave订阅 binlog日志，然后通过binlog将数据同步到监听者中。</p><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h1 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h1><p>[1] <a href="https://mp.weixin.qq.com/s/C7y1iPVV2atyPZc7HE2azA" target="_blank" rel="noopener noreferrer">https://mp.weixin.qq.com/s/C7y1iPVV2atyPZc7HE2azA</a></p>',33);function g(m,u){return n(),e("div",null,[t("more-"),h])}const y=i(d,[["render",g],["__file","4_elasticSearch与MySQL数据同步.html.vue"]]),S=JSON.parse('{"path":"/posts/%E5%90%8E%E7%AB%AF/elasticSearch/4_elasticSearch%E4%B8%8EMySQL%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5.html","title":"ES与MySQL数据同步","lang":"zh-CN","frontmatter":{"title":"ES与MySQL数据同步","date":"2024-07-05T00:00:00.000Z","tags":"ElasticSearch","category":["ElasticSearch","数据同步"],"order":4,"icon":"/img/mysql.svg","description":"ES与MySQL数据同步 在实际项目开发中，常用Mysql作为业务数据库，ElasticSearch作为查询库。ElasticSearch主要用来应对海量数据的复杂查询，提高查询效率和缓解Mysql数据库的压力。如何实现 MySQL 数据库和ElasticSearch之间的数据同步也是为非常关键的，下面介绍几种常见的数据同步方案方案。 一、同步双写方案...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%90%8E%E7%AB%AF/elasticSearch/4_elasticSearch%E4%B8%8EMySQL%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5.html"}],["meta",{"property":"og:site_name","content":"Lance"}],["meta",{"property":"og:title","content":"ES与MySQL数据同步"}],["meta",{"property":"og:description","content":"ES与MySQL数据同步 在实际项目开发中，常用Mysql作为业务数据库，ElasticSearch作为查询库。ElasticSearch主要用来应对海量数据的复杂查询，提高查询效率和缓解Mysql数据库的压力。如何实现 MySQL 数据库和ElasticSearch之间的数据同步也是为非常关键的，下面介绍几种常见的数据同步方案方案。 一、同步双写方案..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/image\\\\es\\\\es14.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-09T11:07:04.000Z"}],["meta",{"property":"article:author","content":"RuyiWei"}],["meta",{"property":"article:published_time","content":"2024-07-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-09T11:07:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ES与MySQL数据同步\\",\\"image\\":[\\"https://mister-hope.github.io/image\\\\\\\\es\\\\\\\\es14.png\\",\\"https://mister-hope.github.io/image\\\\\\\\es\\\\\\\\es15.png\\",\\"https://mister-hope.github.io/image\\\\\\\\es\\\\\\\\es16.png\\",\\"https://mister-hope.github.io/image\\\\\\\\es\\\\\\\\es17.png\\",\\"https://mister-hope.github.io/image\\\\\\\\es\\\\\\\\es18.png\\",\\"https://mister-hope.github.io/image\\\\\\\\es\\\\\\\\es19.png\\"],\\"datePublished\\":\\"2024-07-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-09T11:07:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"RuyiWei\\"}]}"]]},"headers":[{"level":2,"title":"一、同步双写方案","slug":"一、同步双写方案","link":"#一、同步双写方案","children":[]},{"level":2,"title":"二、异步双写方案","slug":"二、异步双写方案","link":"#二、异步双写方案","children":[]},{"level":2,"title":"三、定时任务同步方案","slug":"三、定时任务同步方案","link":"#三、定时任务同步方案","children":[]},{"level":2,"title":"四、使用Logstash同步","slug":"四、使用logstash同步","link":"#四、使用logstash同步","children":[]},{"level":2,"title":"五、使用binlog同步——自建binlog服务中心","slug":"五、使用binlog同步——自建binlog服务中心","link":"#五、使用binlog同步——自建binlog服务中心","children":[]},{"level":2,"title":"六、使用binlog同步——开源中间件","slug":"六、使用binlog同步——开源中间件","link":"#六、使用binlog同步——开源中间件","children":[]}],"git":{"createdTime":1723201624000,"updatedTime":1723201624000,"contributors":[{"name":"yqiChen","email":"chenyuqi1229@gmail.com","commits":1}]},"readingTime":{"minutes":3.35,"words":1004},"filePathRelative":"posts/后端/elasticSearch/4_elasticSearch与MySQL数据同步.md","localizedDate":"2024年7月5日","excerpt":"<!--more--->\\n<h1>ES与MySQL数据同步</h1>\\n<p>在实际项目开发中，常用Mysql作为业务数据库，ElasticSearch作为查询库。ElasticSearch主要用来应对海量数据的复杂查询，提高查询效率和缓解Mysql数据库的压力。如何实现 MySQL 数据库和ElasticSearch之间的数据同步也是为非常关键的，下面介绍几种常见的数据同步方案方案。</p>\\n<h2>一、同步双写方案</h2>\\n<figure><img src=\\"/image\\\\es\\\\es14.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>","autoDesc":true}');export{y as comp,S as data};
