import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,a as p,b as e,o as c}from"./app-Di6OdOcP.js";const i="/image/base/hiubian1.png",a={},d=e('<h1 id="汇编指令" tabindex="-1"><a class="header-anchor" href="#汇编指令"><span>汇编指令</span></a></h1><h2 id="基础" tabindex="-1"><a class="header-anchor" href="#基础"><span>基础</span></a></h2><p><strong>80386有如下通用寄存器:</strong></p><ul><li>AX,BX,CX,DX;SI,DI;SP,BP;(16位)</li><li>AH,AL ; BH,BL; CH,CL; DH,DL( 8位)</li><li>EAX,EBX,ECX,EDX: ESI,EDI: ESP,EBP(32位)</li></ul><p><strong>段寄存器</strong>:DS，ES，SS</p>',5),n=e('<figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="指令格式" tabindex="-1"><a class="header-anchor" href="#指令格式"><span>指令格式</span></a></h2><p><code>指令 源操作数, 目的操作数</code></p><div class="hint-container info"><p class="hint-container-title">操作数</p><ul><li><p>立即数</p></li><li><p>寄存器</p></li><li><p>存储器</p></li></ul></div><p><strong>数据传送</strong>：</p><p><code>movl</code>:用于传送<strong>32</strong>位的长字值</p><p><code>movw</code>:用于传送<strong>16</strong>位的长字值</p><p><code>movb</code>:用于传送<strong>8</strong>位的长字值</p><div class="hint-container tip"><p class="hint-container-title">寻址方式</p><ol><li>立即数寻址 <code>movl $1, %eax</code></li><li>寄存器寻址 <code>movl %ebx, %eax</code></li><li>绝对寻址 <code>movl 0x08048054, %eax</code></li><li>简介寻址 <code>movl (%ebx), %eax</code></li><li>比例变址寻址 <code>movl Imm(Eb, Ei, s)</code> M[Imm+R[Eb]+R[Ei]*s]</li></ol></div><p><strong>获得变量在内存中地址并传送给寄存器</strong></p><p><code>lea value1, %edi</code></p><p><code>movl $value1, %</code></p><p>lea寻址： <code>leal Src, Dest</code></p><p>​ Src:地址计算表达式 --&gt; Src的结果保存在Dest中</p><p>​ 用途：计算内存地址本身（不计算内存里的值）</p><h2 id="栈操作" tabindex="-1"><a class="header-anchor" href="#栈操作"><span>栈操作</span></a></h2><div class="hint-container tip"><p class="hint-container-title">栈操作</p><p>栈顶指针：保存在<code>%esp</code>寄存器</p><p>栈底指针：保存在<code>%ebp</code>寄存器</p><p>压栈： <code>push</code></p><p>出栈：<code>pop</code></p><p>注意：栈顶事朝向低地址方向的</p></div><h2 id="算数逻辑操作" tabindex="-1"><a class="header-anchor" href="#算数逻辑操作"><span>算数逻辑操作</span></a></h2><p><code>incl</code>:加1操作</p><p><code>decl</code>:减1操作</p><p><code>negl</code>：取负</p><p><code>addl S</code>：加法</p><p><code>subl</code>：减法</p><p><code>imull S</code>：有符号乘法，将S与<code>%eax</code>中的值相乘，64位结果高32位放<code>%ex</code>,低32位放<code>%eax</code></p><p><code>mull</code>:无符号乘法</p><p><code>orl S</code>：或</p><p><code>anl S</code>：与</p><p><code>xorl S</code>：异或</p><p><code>notl</code>：取反</p><p><code>SHR</code>：逻辑右移</p><p><code>SHL</code>：逻辑左移</p><p><code>SAR</code>：算数右移</p><p><code>SAL</code>：算数左移</p><h2 id="跳转指令" tabindex="-1"><a class="header-anchor" href="#跳转指令"><span>跳转指令</span></a></h2><p>无符号数： above, below</p><p>有符号数：great, less</p><p>N: 不 E:等于</p><p>进行组合，例如：</p><p><code>jne</code>：不等于</p><p><code>jae</code>：大于等于</p><p><code>jg</code>：大于</p><h2 id="有条件传送" tabindex="-1"><a class="header-anchor" href="#有条件传送"><span>有条件传送</span></a></h2><p><code>cmove</code>：相等</p><p><code>cmovs</code>：负数</p><p><code>cmovg</code>：大于</p><p><code>cmovl</code>：小于</p><p><code>cmp</code>：对两个数做减法，但是不保留结果，仅保留标志位</p><p><code>test</code>：对两个操作数进行逻辑与运算，但是不保留结果</p>',48);function l(r,s){return c(),t("div",null,[d,p(" more "),n])}const E=o(a,[["render",l],["__file","汇编指令.html.vue"]]),g=JSON.parse('{"path":"/posts/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4.html","title":"汇编指令","lang":"zh-CN","frontmatter":{"title":"汇编指令","date":"2024-06-14T00:00:00.000Z","tags":"code","category":"基础知识","description":"基础 80386有如下通用寄存器: AX,BX,CX,DX;SI,DI;SP,BP;(16位) AH,AL ; BH,BL; CH,CL; DH,DL( 8位) EAX,EBX,ECX,EDX: ESI,EDI: ESP,EBP(32位) 段寄存器:DS，ES，SS","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/posts/%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/%E6%B1%87%E7%BC%96%E6%8C%87%E4%BB%A4.html"}],["meta",{"property":"og:site_name","content":"Lance"}],["meta",{"property":"og:title","content":"汇编指令"}],["meta",{"property":"og:description","content":"基础 80386有如下通用寄存器: AX,BX,CX,DX;SI,DI;SP,BP;(16位) AH,AL ; BH,BL; CH,CL; DH,DL( 8位) EAX,EBX,ECX,EDX: ESI,EDI: ESP,EBP(32位) 段寄存器:DS，ES，SS"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://mister-hope.github.io/image/base/hiubian1.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-09T11:07:04.000Z"}],["meta",{"property":"article:author","content":"RuyiWei"}],["meta",{"property":"article:published_time","content":"2024-06-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-09T11:07:04.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"汇编指令\\",\\"image\\":[\\"https://mister-hope.github.io/image/base/hiubian1.png\\"],\\"datePublished\\":\\"2024-06-14T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-09T11:07:04.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"RuyiWei\\"}]}"]]},"headers":[{"level":2,"title":"基础","slug":"基础","link":"#基础","children":[]},{"level":2,"title":"指令格式","slug":"指令格式","link":"#指令格式","children":[]},{"level":2,"title":"栈操作","slug":"栈操作","link":"#栈操作","children":[]},{"level":2,"title":"算数逻辑操作","slug":"算数逻辑操作","link":"#算数逻辑操作","children":[]},{"level":2,"title":"跳转指令","slug":"跳转指令","link":"#跳转指令","children":[]},{"level":2,"title":"有条件传送","slug":"有条件传送","link":"#有条件传送","children":[]}],"git":{"createdTime":1723201624000,"updatedTime":1723201624000,"contributors":[{"name":"yqiChen","email":"chenyuqi1229@gmail.com","commits":1}]},"readingTime":{"minutes":1.66,"words":497},"filePathRelative":"posts/基础知识/操作系统/汇编指令.md","localizedDate":"2024年6月14日","excerpt":"\\n<h2>基础</h2>\\n<p><strong>80386有如下通用寄存器:</strong></p>\\n<ul>\\n<li>AX,BX,CX,DX;SI,DI;SP,BP;(16位)</li>\\n<li>AH,AL ; BH,BL; CH,CL; DH,DL( 8位)</li>\\n<li>EAX,EBX,ECX,EDX: ESI,EDI: ESP,EBP(32位)</li>\\n</ul>\\n<p><strong>段寄存器</strong>:DS，ES，SS</p>\\n","autoDesc":true}');export{E as comp,g as data};
